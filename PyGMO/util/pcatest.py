from PyGMO import *
from _analysis import analysis
from my_module import my_problem
from numpy import *
import scipy as sp
import numpy as np
import matplotlib.pyplot as plt

prob=problem.kur(3)
anal=analysis(prob)
anal.f_dim=10
a=[]
a.append([[1,-0.153,0.175,0.194,0.205,0.205,0.191,0.191,0.074,-0.292],[-0.153,1,0.155,0.256,0.266,0.263,0.262,0.132,0.193,-0.304],\
[0.175,0.155,1,0.961,0.957,0.942,0.73,0.093,-0.139,-0.342],[0.194,0.256,00.961,1,0.993,0.981,0.782,0.141,-0.133,-0.365],\
[0.205,0.266,0.957,0.993,1,0.99,0.785,0.146,-0.128,-0.361],[.205,.263,.942,.981,.99,1,.785,.152,-.137,-.348],\
[.191,.262,.73,.782,.785,.785,1,.096,-.183,-.385],[.191,.132,.093,.141,.146,.152,.096,1,-.135,-.439],\
[.074,.193,-.139,-.133,-.128,-.137,-.183,-.135,1,-.499],[-.292,-.304,-.342,-.365,-.361,-.348,-.385,-.439,-.499,1]])
e=np.linalg.eigh(a[0])
a.append(e[0].tolist())
a.append(np.transpose(e[1]).tolist())

#print a[0]," \n\n",a[1]," \n\n",a[2]," \n\n"

print anal.perform_f_pca(a)